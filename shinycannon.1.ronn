shinycannon(1) -- load generator for Shiny applications
=======================================================

## SYNOPSIS

`shinycannon` `--help`<br>
`shinycannon` <file> <url> ...

## DESCRIPTION

**shinycannon** generates load on Shiny applications by simulating one or more
users. The basis for each simulation is a recording <file> created using
the [shinyloadtest](https://github.com/rstudio/shinyloadtest) R package.

The number of users simulated during a run -- or "sessions" -- is given by the
number of workers specified and the amount of time each worker should keep
running: the "loaded duration", in minutes, which defaults to 0.

If loaded duration is unspecified, it defaults to 0, and each worker will run
a single session -- simulating a single user -- and then shut down.

## OUTPUT

`shinycannon` produces files in a directory with timing data that can be used to
 analyze the performance of the target application underload.

By default, the output directory is generated using a timestamp. Alternatively,
it can be named with the `--output-dir` option.

A run with `--workers 2` and `--loaded-duration-minutes 0` might look like the
following:

```
.
├── detail.log
├── recording.log
└── workers
    ├── 0_0_0.csv
    └── 1_1_0.csv
```

* `detail.log` contains informational or error messages, depending on the value of
  `--log-level`. It may be empty.
* `recording.log` is a copy of the recording argument passed to shinycannon.
* `workers` is a directory of CSV files. Each CSV file is a log of the activities
  of a single session. The names of these files are given by `x_y_z.csv`, where
  `x` is the global session counter, `y` is the worker id, and `z` is the iteration
  of that session with respect to the worker that ran it. `x`, `y`, and `z` are
  all zero-based counters. So, for example, `1_1_0.csv` is the log for the second
  session to start across all workers and was executed by the second worker. It
  was the first session to be run by that worker.

## OPTIONS

  * `-h`, `--help`
    Show this help message and exit

  * <file>:
    [shinyloadtest](https://github.com/rstudio/shinyloadtest) recording file

  * <url>:
    URL of the target Shiny application

  * `--workers` <num>:
    Number of workers to simulate. Default is 1.

  * `--loaded-duration-minutes` <num>:
    Number of minutes each worker should continue simulating sessions after simulating its first session.

  * `--start-interval` <milliseconds>:
    Number of milliseconds to wait between starting workers.

  * `-H`, `--header` <name: value>:
    A custom HTTP header in the form 'name: value' to add to each request.

  * `--output-dir` <directory>:
    Path to directory to store session logs in for this test run

  * `--overwrite-output`:
    Whether or not to delete the output directory before starting, if it exists already

  * `--debug-log`:
    Whether or not to store debug log output. Defaults to false.

  * `--log-level` <level>:
    Log level (default: warn, available include: debug, info, warn, error)

## AUTHENTICATION

Because credentials are not stored in recordings, a username and password or RStudio Connect API Key must be supplied to `shinycannon` in order to load test authenticated applications.

`shinycannon` does not have `--user`, `--password`, or `--connect-api-key` arguments for security reasons. Instead, the `SHINYCANNON_USER` and `SHINYCANNON_PASS` or `SHINYCANNON_CONNECT_API_KEY` environment variables may be set. `SHINYCANNON_CONNECT_API_KEY` will take preference over `SHINYCANNON_USER` and `SHINYCANNON_PASS`.

## BUGS

Please open an issue here: <https://github.com/rstudio/shinycannon/issues>.

## COPYRIGHT

`shinycannon` is Copyright (c) 2018 RStudio, Inc.
